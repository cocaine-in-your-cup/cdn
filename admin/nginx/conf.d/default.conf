map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Alias for URL using port
upstream grafana {
  server grafana:3000;
}

# Alias for URL using port
upstream ip-api {
  server ip-api:8000;
}

server {
  listen 80;
  listen [::]:80;
  
  server_name 34.76.169.164;

  # Redirect all http traffic to https
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name 34.76.169.164;

  # Set the base URL as a variable
  set $base_url "https://$server_name";

  ssl_certificate /etc/ssl/private/cert.pem;
  ssl_certificate_key /etc/ssl/private/key.pem;

  location / {
    root /var/www/html;
  }

  # Redirect 404 errors to the new URL
  error_page 404 = @redirect;

  location @redirect {
        # Redirect to the new URL with updated path and query parameters
        return 301 $base_url;
  }

  # Custom path to api
  location /cdn/lb/ip {
    proxy_pass http://ip-api/cdn/lb/ip;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # Custom path for grafana
  location /grafana/ {
    rewrite  ^/grafana/(.*)  /$1 break;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }
  
  # Proxy Grafana Live WebSocket connections.
  location /grafana/api/live/ {
    rewrite  ^/grafana/(.*)  /$1 break;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
  }
}